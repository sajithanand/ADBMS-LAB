                                                                Experiment No: 20- NoSQL â€“ AGGREGATE FUNCTIONS AND REGULAR EXPRESSIONS   DATE--14/06/2022
                                                                ------------------------------------------------------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1) Write a MongoDB query to sort customer details in ascending order of their name.

db.customer.find().sort({"name":1});
{ "_id" : ObjectId("62a821d16c93fac6129a44b2"), "name" : "abin", "city" : "kunnamangalam", "ph_no" : "80874712190", "age" : "61" }
{ "_id" : ObjectId("62a85c66268391307b75ca04"), "name" : "jhon", "city" : "tvm", "ph_no" : "10000", "age" : "22" }
{ "_id" : ObjectId("62a829d56c93fac6129a44b6"), "name" : "jithu", "city" : "ekm", "ph_no" : "984712190", "age" : "22" }
{ "_id" : ObjectId("62a821d16c93fac6129a44b3"), "name" : "junaid", "city" : "kuttipuram", "ph_no" : "7322712190", "age" : "82" }
{ "_id" : ObjectId("62a829d56c93fac6129a44b7"), "name" : "manu", "city" : "tvm", "ph_no" : "984712190", "age" : "33" }
{ "_id" : ObjectId("62a85c46268391307b75ca03"), "name" : "sanan", "city" : "ekm", "ph_no" : "984712190", "age" : "33" }

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2)   Write a MongoDB query to count number of customers in each city.

db.customer.aggregate([{$group:{_id: "$city",total:{$sum:1}}}])
{ "_id" : "kuttipuram", "total" : 1 }
{ "_id" : "kunnamangalam", "total" : 1 }
{ "_id" : "ekm", "total" : 2 }
{ "_id" : "tvm", "total" : 2 }


----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3) Write a MongoDB query to find minimum and maximum age in each city.

db.customer.aggregate([{$group:{_id:"$city",max_age:{$max:"$age"},min_age:{$min:"$age"}}}])
{ "_id" : "kuttipuram", "max_age" : "82", "min_age" : "82" }
{ "_id" : "kunnamangalam", "max_age" : "61", "min_age" : "61" }
{ "_id" : "ekm", "max_age" : "33", "min_age" : "22" }
{ "_id" : "tvm", "max_age" : "33", "min_age" : "22" }

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------




//VERIFIED





















